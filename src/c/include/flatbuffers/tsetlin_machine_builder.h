#ifndef TSETLIN_MACHINE_BUILDER_H
#define TSETLIN_MACHINE_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef TSETLIN_MACHINE_READER_H
#include "tsetlin_machine_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __TsetlinMachine_Parameters_required[] = { 0 };
typedef flatbuffers_ref_t TsetlinMachine_Parameters_ref_t;
static TsetlinMachine_Parameters_ref_t TsetlinMachine_Parameters_clone(flatbuffers_builder_t *B, TsetlinMachine_Parameters_table_t t);
__flatbuffers_build_table(flatbuffers_, TsetlinMachine_Parameters, 8)

static const flatbuffers_voffset_t __TsetlinMachine_ClauseWeightsTensor_required[] = { 0 };
typedef flatbuffers_ref_t TsetlinMachine_ClauseWeightsTensor_ref_t;
static TsetlinMachine_ClauseWeightsTensor_ref_t TsetlinMachine_ClauseWeightsTensor_clone(flatbuffers_builder_t *B, TsetlinMachine_ClauseWeightsTensor_table_t t);
__flatbuffers_build_table(flatbuffers_, TsetlinMachine_ClauseWeightsTensor, 2)

static const flatbuffers_voffset_t __TsetlinMachine_AutomatonStatesTensor_required[] = { 0 };
typedef flatbuffers_ref_t TsetlinMachine_AutomatonStatesTensor_ref_t;
static TsetlinMachine_AutomatonStatesTensor_ref_t TsetlinMachine_AutomatonStatesTensor_clone(flatbuffers_builder_t *B, TsetlinMachine_AutomatonStatesTensor_table_t t);
__flatbuffers_build_table(flatbuffers_, TsetlinMachine_AutomatonStatesTensor, 2)

static const flatbuffers_voffset_t __TsetlinMachine_Model_required[] = { 0, 1, 2, 0 };
typedef flatbuffers_ref_t TsetlinMachine_Model_ref_t;
static TsetlinMachine_Model_ref_t TsetlinMachine_Model_clone(flatbuffers_builder_t *B, TsetlinMachine_Model_table_t t);
__flatbuffers_build_table(flatbuffers_, TsetlinMachine_Model, 4)

#define __TsetlinMachine_Parameters_formal_args ,\
  uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3,\
  int8_t v4, int8_t v5, uint8_t v6, float v7
#define __TsetlinMachine_Parameters_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TsetlinMachine_Parameters_ref_t TsetlinMachine_Parameters_create(flatbuffers_builder_t *B __TsetlinMachine_Parameters_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, TsetlinMachine_Parameters, TsetlinMachine_Parameters_file_identifier, TsetlinMachine_Parameters_type_identifier)

#define __TsetlinMachine_ClauseWeightsTensor_formal_args , flatbuffers_int16_vec_ref_t v0, flatbuffers_uint32_vec_ref_t v1
#define __TsetlinMachine_ClauseWeightsTensor_call_args , v0, v1
static inline TsetlinMachine_ClauseWeightsTensor_ref_t TsetlinMachine_ClauseWeightsTensor_create(flatbuffers_builder_t *B __TsetlinMachine_ClauseWeightsTensor_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, TsetlinMachine_ClauseWeightsTensor, TsetlinMachine_ClauseWeightsTensor_file_identifier, TsetlinMachine_ClauseWeightsTensor_type_identifier)

#define __TsetlinMachine_AutomatonStatesTensor_formal_args , flatbuffers_int8_vec_ref_t v0, flatbuffers_uint32_vec_ref_t v1
#define __TsetlinMachine_AutomatonStatesTensor_call_args , v0, v1
static inline TsetlinMachine_AutomatonStatesTensor_ref_t TsetlinMachine_AutomatonStatesTensor_create(flatbuffers_builder_t *B __TsetlinMachine_AutomatonStatesTensor_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, TsetlinMachine_AutomatonStatesTensor, TsetlinMachine_AutomatonStatesTensor_file_identifier, TsetlinMachine_AutomatonStatesTensor_type_identifier)

#define __TsetlinMachine_Model_formal_args , TsetlinMachine_Parameters_ref_t v0, TsetlinMachine_AutomatonStatesTensor_ref_t v1, TsetlinMachine_ClauseWeightsTensor_ref_t v2, flatbuffers_string_vec_ref_t v3
#define __TsetlinMachine_Model_call_args , v0, v1, v2, v3
static inline TsetlinMachine_Model_ref_t TsetlinMachine_Model_create(flatbuffers_builder_t *B __TsetlinMachine_Model_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, TsetlinMachine_Model, TsetlinMachine_Model_file_identifier, TsetlinMachine_Model_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, TsetlinMachine_Parameters_threshold, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(1, flatbuffers_, TsetlinMachine_Parameters_n_literals, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(2, flatbuffers_, TsetlinMachine_Parameters_n_clauses, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(3, flatbuffers_, TsetlinMachine_Parameters_n_classes, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(4, flatbuffers_, TsetlinMachine_Parameters_max_state, flatbuffers_int8, int8_t, 1, 1, INT8_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(5, flatbuffers_, TsetlinMachine_Parameters_min_state, flatbuffers_int8, int8_t, 1, 1, INT8_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(6, flatbuffers_, TsetlinMachine_Parameters_boost_tp, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), TsetlinMachine_Parameters)
__flatbuffers_build_scalar_field(7, flatbuffers_, TsetlinMachine_Parameters_learn_s, flatbuffers_float, float, 4, 4, 0.00000000f, TsetlinMachine_Parameters)

static inline TsetlinMachine_Parameters_ref_t TsetlinMachine_Parameters_create(flatbuffers_builder_t *B __TsetlinMachine_Parameters_formal_args)
{
    if (TsetlinMachine_Parameters_start(B)
        || TsetlinMachine_Parameters_threshold_add(B, v0)
        || TsetlinMachine_Parameters_n_literals_add(B, v1)
        || TsetlinMachine_Parameters_n_clauses_add(B, v2)
        || TsetlinMachine_Parameters_n_classes_add(B, v3)
        || TsetlinMachine_Parameters_learn_s_add(B, v7)
        || TsetlinMachine_Parameters_max_state_add(B, v4)
        || TsetlinMachine_Parameters_min_state_add(B, v5)
        || TsetlinMachine_Parameters_boost_tp_add(B, v6)) {
        return 0;
    }
    return TsetlinMachine_Parameters_end(B);
}

static TsetlinMachine_Parameters_ref_t TsetlinMachine_Parameters_clone(flatbuffers_builder_t *B, TsetlinMachine_Parameters_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (TsetlinMachine_Parameters_start(B)
        || TsetlinMachine_Parameters_threshold_pick(B, t)
        || TsetlinMachine_Parameters_n_literals_pick(B, t)
        || TsetlinMachine_Parameters_n_clauses_pick(B, t)
        || TsetlinMachine_Parameters_n_classes_pick(B, t)
        || TsetlinMachine_Parameters_learn_s_pick(B, t)
        || TsetlinMachine_Parameters_max_state_pick(B, t)
        || TsetlinMachine_Parameters_min_state_pick(B, t)
        || TsetlinMachine_Parameters_boost_tp_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, TsetlinMachine_Parameters_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, TsetlinMachine_ClauseWeightsTensor_weights, flatbuffers_int16, int16_t, TsetlinMachine_ClauseWeightsTensor)
__flatbuffers_build_vector_field(1, flatbuffers_, TsetlinMachine_ClauseWeightsTensor_shape, flatbuffers_uint32, uint32_t, TsetlinMachine_ClauseWeightsTensor)

static inline TsetlinMachine_ClauseWeightsTensor_ref_t TsetlinMachine_ClauseWeightsTensor_create(flatbuffers_builder_t *B __TsetlinMachine_ClauseWeightsTensor_formal_args)
{
    if (TsetlinMachine_ClauseWeightsTensor_start(B)
        || TsetlinMachine_ClauseWeightsTensor_weights_add(B, v0)
        || TsetlinMachine_ClauseWeightsTensor_shape_add(B, v1)) {
        return 0;
    }
    return TsetlinMachine_ClauseWeightsTensor_end(B);
}

static TsetlinMachine_ClauseWeightsTensor_ref_t TsetlinMachine_ClauseWeightsTensor_clone(flatbuffers_builder_t *B, TsetlinMachine_ClauseWeightsTensor_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (TsetlinMachine_ClauseWeightsTensor_start(B)
        || TsetlinMachine_ClauseWeightsTensor_weights_pick(B, t)
        || TsetlinMachine_ClauseWeightsTensor_shape_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, TsetlinMachine_ClauseWeightsTensor_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, TsetlinMachine_AutomatonStatesTensor_states, flatbuffers_int8, int8_t, TsetlinMachine_AutomatonStatesTensor)
__flatbuffers_build_vector_field(1, flatbuffers_, TsetlinMachine_AutomatonStatesTensor_shape, flatbuffers_uint32, uint32_t, TsetlinMachine_AutomatonStatesTensor)

static inline TsetlinMachine_AutomatonStatesTensor_ref_t TsetlinMachine_AutomatonStatesTensor_create(flatbuffers_builder_t *B __TsetlinMachine_AutomatonStatesTensor_formal_args)
{
    if (TsetlinMachine_AutomatonStatesTensor_start(B)
        || TsetlinMachine_AutomatonStatesTensor_states_add(B, v0)
        || TsetlinMachine_AutomatonStatesTensor_shape_add(B, v1)) {
        return 0;
    }
    return TsetlinMachine_AutomatonStatesTensor_end(B);
}

static TsetlinMachine_AutomatonStatesTensor_ref_t TsetlinMachine_AutomatonStatesTensor_clone(flatbuffers_builder_t *B, TsetlinMachine_AutomatonStatesTensor_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (TsetlinMachine_AutomatonStatesTensor_start(B)
        || TsetlinMachine_AutomatonStatesTensor_states_pick(B, t)
        || TsetlinMachine_AutomatonStatesTensor_shape_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, TsetlinMachine_AutomatonStatesTensor_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, TsetlinMachine_Model_params, TsetlinMachine_Parameters, TsetlinMachine_Model)
__flatbuffers_build_table_field(1, flatbuffers_, TsetlinMachine_Model_automaton_states, TsetlinMachine_AutomatonStatesTensor, TsetlinMachine_Model)
__flatbuffers_build_table_field(2, flatbuffers_, TsetlinMachine_Model_clause_weights, TsetlinMachine_ClauseWeightsTensor, TsetlinMachine_Model)
__flatbuffers_build_string_vector_field(3, flatbuffers_, TsetlinMachine_Model_literal_names, TsetlinMachine_Model)

static inline TsetlinMachine_Model_ref_t TsetlinMachine_Model_create(flatbuffers_builder_t *B __TsetlinMachine_Model_formal_args)
{
    if (TsetlinMachine_Model_start(B)
        || TsetlinMachine_Model_params_add(B, v0)
        || TsetlinMachine_Model_automaton_states_add(B, v1)
        || TsetlinMachine_Model_clause_weights_add(B, v2)
        || TsetlinMachine_Model_literal_names_add(B, v3)) {
        return 0;
    }
    return TsetlinMachine_Model_end(B);
}

static TsetlinMachine_Model_ref_t TsetlinMachine_Model_clone(flatbuffers_builder_t *B, TsetlinMachine_Model_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (TsetlinMachine_Model_start(B)
        || TsetlinMachine_Model_params_pick(B, t)
        || TsetlinMachine_Model_automaton_states_pick(B, t)
        || TsetlinMachine_Model_clause_weights_pick(B, t)
        || TsetlinMachine_Model_literal_names_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, TsetlinMachine_Model_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* TSETLIN_MACHINE_BUILDER_H */
